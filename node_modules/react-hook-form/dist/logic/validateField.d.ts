import * as React from 'react';
import { Field, FieldRefs, FieldError, InternalFieldName, FlatFieldErrors, FieldValue, UnpackNestedValue } from '../types/form';
import { DeepPartial } from '../types/utils';
declare const _default: <TFieldValues extends Record<string, any>>(fieldsRef: React.MutableRefObject<Partial<Record<InternalFieldName<TFieldValues>, Field>>>, validateAllFieldCriteria: boolean, { ref, ref: { type, value }, options, required, maxLength, minLength, min, max, pattern, validate, }: Field, unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>, defaultValuesRef: React.MutableRefObject<UnpackNestedValue<TFieldValues>[InternalFieldName<UnpackNestedValue<TFieldValues>>] | UnpackNestedValue<DeepPartial<TFieldValues>>>) => Promise<Partial<Record<InternalFieldName<TFieldValues>, FieldError>>>;
export default _default;
