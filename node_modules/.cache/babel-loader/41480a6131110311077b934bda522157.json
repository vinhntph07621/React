{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuyloc\\\\Downloads\\\\React\\\\src\\\\pages\\\\views\\\\Admin\\\\Addproduct\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from \"react-hook-form\";\nimport firebase from './../../../../firebase';\n\nconst Addproduct = ({\n  onAdd,\n  categories\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // const[valueInput, setValueInput]= useState({});\n  // const onHandleChange=(e)=>{\n  //   const { name, value } = e.target;\n  //   setValueInput({\n  //       ...valueInput,\n  //         [name]:value\n  //     });\n  // }\n\n  const [desc, setDesc] = useState(\"\");\n\n  const onHandleSubmit = data => {\n    console.log(data);\n    let file = data.image[0]; // tạo folder chứa ảnh trên firesbase\n\n    let storageRef = firebase.storage().ref(`images/${file.name}`); // đẩy ảnh lên đường dẫn trên\n\n    let uploadTask = storageRef.put(file); // thực hiện việc đầy ảnh lên firebase\n\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED); // lấy ảnh từ Firebase\n\n    firebase.storage().ref().child(`images/${file.name}`).getDownloadURL().then(url => {\n      // Tạo object mới chứa toàn bộ thông tin từ input\n      const newData = {\n        id: Math.random().toString(36).substr(2, 9),\n        ...data,\n        image: url\n      }; // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\n\n      onAdd(newData);\n      console.log(newData);\n    });\n\n    const handleEditorChange = (content, editor) => {\n      setDesc(content);\n    };\n  }; // const onHandleSubmit =(e) =>{\n  //     e.preventDefault();\n  //     onAdd(valueInput)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-2 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Add Product\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputProductName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    id: \"inputProductName\",\n    ref: register({\n      required: true,\n      minLength: 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), errors.name && errors.name.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 61\n    }\n  }, \"Kh\\xF4ng \\u0111\\u1EC3 tr\\u1ED1ng\"), errors.name && errors.name.type === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 62\n    }\n  }, \"T\\xEAn kh\\xF4ng d\\u01B0\\u1EDBi 5 k\\xFD t\\u1EF1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputCategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \" Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"inputCategory\",\n    name: \"cate_id\",\n    className: \"form-control\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, categories.map(cate => /*#__PURE__*/React.createElement(\"option\", {\n    value: cate.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, cate.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputProductImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \" \\u1EA2nh \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    name: \"image\",\n    id: \"inputProductImage\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputProductPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Gi\\xE1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"price\",\n    id: \"inputProductPrice\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputProducDescripton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"M\\xF4 t\\u1EA3\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"desc\",\n    id: \"inputProducDescripton\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Submit\")))));\n};\n\nAddproduct.propTypes = {\n  onAdd: PropTypes.func\n};\nexport default Addproduct;","map":{"version":3,"sources":["C:/Users/Thuyloc/Downloads/React/src/pages/views/Admin/Addproduct/index.js"],"names":["React","useState","PropTypes","useForm","firebase","Addproduct","onAdd","categories","register","handleSubmit","errors","desc","setDesc","onHandleSubmit","data","console","log","file","image","storageRef","storage","ref","name","uploadTask","put","on","TaskEvent","STATE_CHANGED","child","getDownloadURL","then","url","newData","id","Math","random","toString","substr","handleEditorChange","content","editor","required","minLength","type","map","cate","propTypes","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from './../../../../firebase'\r\n\r\n\r\nconst Addproduct = ({onAdd, categories}) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  // const[valueInput, setValueInput]= useState({});\r\n  // const onHandleChange=(e)=>{\r\n  //   const { name, value } = e.target;\r\n  //   setValueInput({\r\n  //       ...valueInput,\r\n  //         [name]:value\r\n  //     });\r\n  // }\r\n  const [desc, setDesc] = useState(\"\");\r\n  const onHandleSubmit = (data) => {\r\n    console.log(data)\r\n    let file = data.image[0];\r\n    // tạo folder chứa ảnh trên firesbase\r\n    let storageRef = firebase.storage().ref(`images/${file.name}`);\r\n    // đẩy ảnh lên đường dẫn trên\r\n    let uploadTask = storageRef.put(file);\r\n    // thực hiện việc đầy ảnh lên firebase\r\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED);\r\n\r\n    // lấy ảnh từ Firebase\r\n    firebase.storage().ref().child(`images/${file.name}`).getDownloadURL().then((url) => {\r\n        // Tạo object mới chứa toàn bộ thông tin từ input\r\n        const newData = {\r\n            id: Math.random().toString(36).substr(2, 9),\r\n            ...data,\r\n            image: url\r\n        }\r\n        // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\r\n        onAdd(newData)\r\n        console.log(newData);\r\n    })\r\n    const handleEditorChange = (content, editor) => {\r\n        setDesc(content);\r\n    }\r\n}\r\n\r\n  // const onHandleSubmit =(e) =>{\r\n  //     e.preventDefault();\r\n  //     onAdd(valueInput)\r\n  // }\r\n    return (\r\n      <div className=\"container-fluid\">\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Add Product</h1>\r\n      <div className=\"card shadow mb-4\">\r\n        <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit(onHandleSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputProductName\">Tên sản phẩm</label>\r\n          <input type=\"text\" className=\"form-control\" name=\"name\" id=\"inputProductName\" ref={register({required: true, minLength:5})} /> \r\n          {errors.name && errors.name.type === \"required\" &&<span>Không để trống</span>}  \r\n          {errors.name && errors.name.type === \"minLength\" &&<span>Tên không dưới 5 ký tự</span>}        \r\n        </div>       \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputCategory\"> Danh mục sản phẩm </label>\r\n          <select id=\"inputCategory\" name=\"cate_id\" className=\"form-control\" ref={register}>\r\n            {categories.map((cate) => (\r\n              <option value={cate.id}>{cate.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>   \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputProductImage\"> Ảnh </label>\r\n          <input type=\"file\" className=\"form-control\" name=\"image\" id=\"inputProductImage\" ref={register({required: true})}/>       \r\n        </div>   \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputProductPrice\">Giá</label>\r\n          <input type=\"text\" className=\"form-control\" name=\"price\" id=\"inputProductPrice\" ref={register({required: true})} />       \r\n        </div>      \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputProducDescripton\">Mô tả</label>\r\n          <input type=\"text\" className=\"form-control\" name=\"desc\" id=\"inputProducDescripton\" ref={register({required: true})} />       \r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nAddproduct.propTypes = {\r\n  onAdd: PropTypes.func\r\n}\r\n\r\nexport default Addproduct\r\n"]},"metadata":{},"sourceType":"module"}